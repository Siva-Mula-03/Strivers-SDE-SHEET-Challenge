//Recursive Approach
//we have to return entire subtree noded at the keynode.

class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) 
    {
       if(root==NULL)
       {
           return NULL;
       }
        if(root->val==val)
        {
            return root;
        }
        else if(root->val>val)
        {
            return searchBST(root->left,val);
        }
       return searchBST(root->right,val);
    }
        
};

//Approach 2

class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) 
    {
      while(root!=NULL && root->val!=val)
      {
          root = val<root->val ? root->left :root->right;
          
      }
        return root;
    }
};

