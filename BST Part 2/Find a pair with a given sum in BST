//TC-O(N) SC-O(N)(Two Pointer Approach)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode*root,vector<int>&p,int k)
    {
        if(root==NULL)
        {
            return ;
        }
        inorder(root->left,p,k);
        p.push_back(root->val);
        inorder(root->right,p,k);
        
    }
    bool findTarget(TreeNode* root, int k) 
    {
        int i,j;
        vector<int>p;
        inorder(root,p,k);
        int n=p.size();
        i=0;j=n-1;
        while(i<j)
        {
            if(p[i]+p[j]==k ) return true;
            else if(p[i]+p[j]<k)i++;
            else
                j--;
        }
        return false;
    }
};
