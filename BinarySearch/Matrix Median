int countnofl(vector<int>&row,int m)
{
    int l=0;
    int h=row.size()-1;
    while(l<=h)
    {
        int mid=(l+h)>>1;
        if(row[mid]<=m)
        {
            l=mid+1;
        }
        else{
            h=mid-1;
        }
    }
    return l;
}
int Solution::findMedian(vector<vector<int> > &A) {
    int low=1;
    int high=1e9;
    int rows=A.size();
    int cols=A[0].size();
    
    while(low<=high)
    {
        int count=0;
        int mid=(low+high)>>1;
        for(int i=0;i<rows;i++)
        {
            count+=countnofl(A[i],mid);
            
        }
        if(count<=(rows*cols)/2)
            {
                low= mid+1;
            }
            else
            {
                high=mid-1;
            }
    }
    return low;
}
