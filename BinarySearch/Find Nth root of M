
  // method1
// int NthRoot(int n, int m) {

//   double t = 1 / n;
//   float ans = pow(m, t);
//   if (ceil(ans) == ans)
//     return ans;
//   return -1;
// }

//method2
double multiply(int a ,int n)
{
  double ans=1.0;
  for(int i=1;i<=n;i++)
  {
    ans*=a;
  }
  return ans;
}

int NthRoot(int n, int m) {
  double low=1;
  double high=m;
  double eps=1e-6;

    while((high-low)>eps)
    {
      double mid=low+(high-low)/2;
      if(multiply(mid,n)==m)
      {
        return (int)mid;
      }
      if(multiply(mid,n)<m)
      {
        low=mid;
      }
      else{
        high=mid;
      }
    }
    return -1;
  }
  
